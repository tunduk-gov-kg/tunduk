// <auto-generated />
using System;
using Catalog.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Catalog.DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190312113136_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Catalog.DataAccessLayer.XRoad.Entity.Member", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Instance")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("MemberClass")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("MemberCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Instance", "MemberClass", "MemberCode")
                        .IsUnique();

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Catalog.DataAccessLayer.XRoad.Entity.MemberService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("MemberId");

                    b.Property<DateTime?>("ModificationDateTime")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("ServiceCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ServiceVersion")
                        .HasMaxLength(100);

                    b.Property<string>("Wsdl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MemberId", "ServiceCode", "ServiceVersion")
                        .IsUnique();

                    b.ToTable("MemberServices");
                });

            modelBuilder.Entity("Catalog.DataAccessLayer.XRoad.Entity.SecurityServer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("MemberId");

                    b.Property<DateTime?>("ModificationDateTime")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("SecurityServerCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("MemberId", "SecurityServerCode")
                        .IsUnique();

                    b.ToTable("SecurityServers");
                });

            modelBuilder.Entity("Catalog.DataAccessLayer.XRoad.Entity.SubSystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("MemberId");

                    b.Property<string>("SubSystemCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("MemberId", "SubSystemCode")
                        .IsUnique();

                    b.ToTable("SubSystems");
                });

            modelBuilder.Entity("Catalog.DataAccessLayer.XRoad.Entity.SubSystemService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDateTime")
                        .ValueGeneratedOnUpdate();

                    b.Property<string>("ServiceCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ServiceVersion")
                        .HasMaxLength(100);

                    b.Property<long>("SubSystemId");

                    b.Property<string>("Wsdl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SubSystemId", "ServiceCode", "ServiceVersion")
                        .IsUnique();

                    b.ToTable("SubSystemServices");
                });

            modelBuilder.Entity("Catalog.DataAccessLayer.XRoad.Entity.MemberService", b =>
                {
                    b.HasOne("Catalog.DataAccessLayer.XRoad.Entity.Member", "Member")
                        .WithMany("Services")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Catalog.DataAccessLayer.XRoad.Entity.SecurityServer", b =>
                {
                    b.HasOne("Catalog.DataAccessLayer.XRoad.Entity.Member", "Member")
                        .WithMany("SecurityServers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Catalog.DataAccessLayer.XRoad.Entity.SubSystem", b =>
                {
                    b.HasOne("Catalog.DataAccessLayer.XRoad.Entity.Member", "Member")
                        .WithMany("SubSystems")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Catalog.DataAccessLayer.XRoad.Entity.SubSystemService", b =>
                {
                    b.HasOne("Catalog.DataAccessLayer.XRoad.Entity.SubSystem", "SubSystem")
                        .WithMany("Services")
                        .HasForeignKey("SubSystemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
